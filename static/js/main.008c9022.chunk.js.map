{"version":3,"sources":["images/banner.jpg","images/me.jpg","components/View.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","marginTop","marginBottom","paper","maxWidth","margin","padding","contents","paddingLeft","paddingRight","card","subtitle","View","AppBar","position","Toolbar","Typography","variant","CardMedia","component","alt","height","image","banner","Container","process","style","top","Grid","container","item","xs","Subtitle","sm","me","TypoLink","Description","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","Activity","Link","href","classes","className","label","url","disable_href","undefined","display","align","description","desc","map","d","i","color","Spacer","space","Card","CardActionArea","CardContent","gutterBottom","CardActions","Button","size","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.008c9022.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/banner.43cfaa52.jpg\";","export default __webpack_public_path__ + \"static/media/me.a57799bb.jpg\";","import React from 'react';\nimport { AppBar, Button, Card, CardActionArea, CardActions, CardContent, CardMedia, Container, Grid, IconButton, Link, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Toolbar, Typography } from '@material-ui/core';\nimport banner from '../images/banner.jpg'\nimport me from '../images/me.jpg'\nimport { Variant } from '@material-ui/core/styles/createTypography';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      marginTop: \"16px\",\n      marginBottom: \"16px\",\n    },\n    paper: {\n        maxWidth: 400,\n        margin: `${theme.spacing(1)}px auto`,\n        padding: theme.spacing(2),\n    },\n    contents: {\n        maxWidth: 800,\n        margin: \"auto\",\n        paddingLeft: \"16px\",\n        paddingRight: \"16px\",\n    },\n    card: {\n        // maxWidth: 345,\n    },\n    subtitle: {\n        marginTop: \"16px\",\n        marginBottom: \"16px\",\n    },\n  }));\n\nexport function View() {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <header>\n                <AppBar position=\"fixed\">\n                    <Toolbar>\n                        <Typography variant=\"body1\">😀안녕하세요, 박정현입니다!👋</Typography>\n                    </Toolbar>\n                </AppBar>\n            </header>\n            <main>\n                <Toolbar/>\n                <CardMedia\n                    component=\"img\"\n                    alt=\"Contemplative Reptile\"\n                    height=\"300\"\n                    image={banner}\n                    title=\"Contemplative Reptile\"\n                />\n                \n                <Container maxWidth=\"md\">\n                    <CardMedia\n                        component=\"img\"\n                        image={process.env.PUBLIC_URL + '/logo.png'}\n                        style={{\n                            position: \"relative\",\n                            top: \"-40px\",\n                            maxWidth: \"80px\",\n                            marginBottom: \"-20px\"\n                    }}/>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12}>\n                            {Subtitle('안녕하세요, 박정현입니다! 👋', 'h4')}\n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n                            <CardMedia\n                                component=\"img\"\n                                alt=\"Contemplative Reptile\"\n                                image={me}\n                                title=\"Contemplative Reptile\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n                            {TypoLink(\"📧 Email\", \"chinjja@gmail.com\", true)}\n                            {TypoLink(\"🐱 GitHub\", \"https://github.com/chinjja\")}\n                            {TypoLink(\"📚 BOJ\", \"https://www.acmicpc.net/user/chinjja\")}\n                            {TypoLink(\"🍀 Naver Blog\", \"http://www.naver.com\")}\n                            {TypoLink(\"📷 Instagram\", \"http://www.naver.com\")}\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            {Description(\"Mobile App Developer\", [\n                                \"꼼꼼한 개발자\",\n                                \"빈 틈을 채워나가는 개발자\",\n                                \"사람들이 필요로 하는 것이 무엇인지 고민하는 개발자\",\n                            ])}\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            {Subtitle('🏆 Awards')}\n                            {Awards()}\n                        </Grid>\n                        \n                        <Grid item xs={12}>\n                            {Subtitle('🛠️ Stacks')}\n                            {Stacks()}\n                        </Grid>\n                        \n                        <Grid item xs={12}>\n                            {Subtitle('🎒 Activities')}\n                            {Activities()}\n                        </Grid>\n                    </Grid>\n                </Container>\n\n            </main>\n            <footer>\n                <Link href=\"https://icons8.com\">https://icons8.com</Link>\n            </footer>\n        </div>\n    )\n}\n\nfunction Subtitle(title: string, variant: Variant = \"h5\") {\n    const classes = useStyles();\n    return <Typography className={classes.subtitle} variant={variant}>{title}</Typography>\n}\n\nfunction TypoLink(label: string, url: string, disable_href: boolean | undefined = undefined) {\n    return (\n        <div style={{\n            marginBottom: \"16px\",\n        }}>\n            <Typography display=\"block\" align=\"left\">{label}</Typography>\n            <Link href={disable_href?undefined:url} display=\"block\" align=\"left\">{url}</Link>\n        </div>\n    )\n}\n\nfunction Awards() {\n    return (\n        <>\n        <TableContainer component={Paper}>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>A</TableCell>\n                        <TableCell>B</TableCell>\n                        <TableCell>C</TableCell>\n                        <TableCell>D</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    <TableRow>\n                        <TableCell>1</TableCell>\n                        <TableCell>2</TableCell>\n                        <TableCell>3</TableCell>\n                        <TableCell>4</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>1</TableCell>\n                        <TableCell>2</TableCell>\n                        <TableCell>3</TableCell>\n                        <TableCell>4</TableCell>\n                    </TableRow>\n                </TableBody>\n            </Table>\n        </TableContainer>\n        </>\n    )\n}\n\nfunction Stacks() {\n    return (\n        <>\n        {Description(\"Java\", [\n            \"Java를 사용해여 Android 앱을 개발해 본 경험이 있습니다.\",\n            \"객체지향 프로그래밍에 대해 이해하고 있습니다.\",\n            \"Java에서 제공하는 클래스와 메소드를 적절하게 사용할 수 있습니다.\",\n        ])}\n        {Description(\"Git\", [\n            \"Git을 활용한 소스코드 버전 관리 및 협업을 할 수 있습니다.\",\n            \"GitHub, Gitlab 등을 사용하여 프로젝트 관리 경험이 있습니다.\",\n        ])}\n        </>\n    )\n}\n\nfunction Description(title: string, description: string[]) {\n    let desc = description.map((d, i) => \n    <Typography key={i} variant=\"body1\" align=\"left\" color=\"textSecondary\">{d}</Typography>\n    )\n\n    return (\n        <>\n        <Typography variant=\"h6\" align=\"left\">{title}</Typography>\n        {Spacer(\"8px\")}\n        {desc}\n        {Spacer(\"16px\")}\n        </>\n    )\n}\n\nfunction Spacer(space: string) {\n    return <div style={{marginBottom: space}}></div>\n}\n\nfunction Activities() {\n    return (\n        <>\n        <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n            {Activity()}\n            </Grid>\n            \n            <Grid item xs={12} sm={6}>\n            {Activity()}\n            </Grid>\n            \n            <Grid item xs={12} sm={6}>\n            {Activity()}\n            </Grid>\n        </Grid>\n        </>\n    )\n}\n\nfunction Activity() {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.card}>\n            <CardActionArea>\n                <CardMedia\n                    component=\"img\"\n                    alt=\"Contemplative Reptile\"\n                    height=\"140\"\n                    image={banner}\n                    title=\"Contemplative Reptile\"\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        Lizard\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\n                        across all continents except Antarctica\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n            <CardActions>\n                <Button size=\"small\" color=\"primary\">Share</Button>\n                <Button size=\"small\" color=\"primary\">Learn More</Button>\n            </CardActions>\n        </Card>\n    )\n}","import React from 'react';\nimport {View} from './components/View'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <View/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}