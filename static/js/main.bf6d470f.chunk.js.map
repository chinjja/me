{"version":3,"sources":["components/View.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["View","navRef","useRef","mainRef","homeRef","aboutRef","servicesRef","downloadsRef","contactRef","useState","actived","setActived","updateHighlight","main","current","navs","threshold","window","scrollY","innerHeight","cur","i","childElementCount","child","children","top","offsetTop","clientHeight","nav","href","endsWith","id","classList","remove","add","useEffect","handleScroll","e","addEventListener","removeEventListener","className","ref","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAGO,SAASA,IACZ,IAAMC,EAASC,iBAAuB,MAChCC,EAAUD,iBAAoB,MAE9BE,EAAUF,iBAAoB,MAC9BG,EAAWH,iBAAoB,MAC/BI,EAAcJ,iBAAoB,MAClCK,EAAeL,iBAAoB,MACnCM,EAAaN,iBAAoB,MARpB,EAUWO,mBAAiC,MAV5C,mBAUZC,EAVY,KAUHC,EAVG,KAYbC,EAAkB,WACpB,IAAMC,EAAOV,EAAQW,QACfC,EAAOd,EAAOa,QAEpB,GAAGD,GAAQE,EAAM,CAIb,IAHA,IAAMC,EAAYC,OAAOC,QAA+B,GAArBD,OAAOE,YAEtCC,EAA8B,KAC1BC,EAAI,EAAGA,EAAIR,EAAKS,kBAAmBD,IAAK,CAC5C,IAAME,EAAQV,EAAKW,SAASH,GACtBI,EAAMF,EAAMG,UAClB,GAAGV,GAAaS,GAAOT,EAAYS,EAAMF,EAAMI,aAAc,CACzD,IAAI,IAAIN,EAAI,EAAGA,EAAIN,EAAKO,kBAAmBD,IAAK,CAC5C,IAAIO,EAAMb,EAAKS,SAASH,GACxB,GAAGO,EAAIC,KAAKC,SAAS,IAAIP,EAAMQ,IAAK,CAChCX,EAAMQ,EACN,OAGR,OAGLlB,GAASA,EAAQsB,UAAUC,OAAO,UAClCb,GAAKA,EAAIY,UAAUE,IAAI,UAC1BvB,EAAWS,KAWnB,OARAe,qBAAU,WACN,IAAMC,EAAe,SAACC,GAClBzB,KAIJ,OAFAA,IACAK,OAAOqB,iBAAiB,SAAUF,GAC3B,kBAAMnB,OAAOsB,oBAAoB,SAAUH,OAGlD,gCACI,iCACA,gCACI,mBAAGP,KAAK,QAAQW,UAAU,UAA1B,kBACA,sBAAKA,UAAU,UAAUC,IAAKxC,EAA9B,UACA,mBAAG4B,KAAK,QAAQW,UAAU,sBAA1B,kBACA,mBAAGX,KAAK,SAASW,UAAU,uBAA3B,mBACA,mBAAGX,KAAK,YAAYW,UAAU,0BAA9B,sBACA,mBAAGX,KAAK,aAAaW,UAAU,2BAA/B,uBACA,mBAAGX,KAAK,WAAWW,UAAU,yBAA7B,6BAIJ,uBAAMC,IAAKtC,EAAX,UACA,yBAASqC,UAAU,OAAOT,GAAG,OAAOU,IAAKrC,EAAzC,SACI,wCAIJ,yBAASoC,UAAU,QAAQT,GAAG,QAAQU,IAAKpC,EAA3C,SACI,yCAIJ,yBAASmC,UAAU,WAAWT,GAAG,WAAWU,IAAKnC,EAAjD,SACI,4CAIJ,yBAASkC,UAAU,YAAYT,GAAG,YAAYU,IAAKlC,EAAnD,SACI,6CAIJ,yBAASiC,UAAU,UAAUT,GAAG,UAAUU,IAAKjC,EAA/C,SACI,iDCzEDkC,MARf,WACE,OACE,qBAAKF,UAAU,MAAf,SACE,cAACxC,EAAD,OCMS2C,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bf6d470f.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './view.css'\n\nexport function View() {\n    const navRef = useRef<HTMLDivElement>(null)\n    const mainRef = useRef<HTMLElement>(null)\n\n    const homeRef = useRef<HTMLElement>(null)\n    const aboutRef = useRef<HTMLElement>(null)\n    const servicesRef = useRef<HTMLElement>(null)\n    const downloadsRef = useRef<HTMLElement>(null)\n    const contactRef = useRef<HTMLElement>(null)\n\n    const [actived, setActived] = useState<HTMLAnchorElement|null>(null)\n\n    const updateHighlight = () => {\n        const main = mainRef.current\n        const navs = navRef.current\n\n        if(main && navs) {\n            const threshold = window.scrollY + window.innerHeight * 0.5\n    \n            let cur: HTMLAnchorElement|null = null\n            for(let i = 0; i < main.childElementCount; i++) {\n                const child = main.children[i] as HTMLElement\n                const top = child.offsetTop\n                if(threshold >= top && threshold < top + child.clientHeight) {\n                    for(let i = 0; i < navs.childElementCount; i++) {\n                        let nav = navs.children[i] as HTMLAnchorElement\n                        if(nav.href.endsWith(\"#\"+child.id)) {\n                            cur = nav\n                            break\n                        }\n                    }\n                    break\n                }\n            }\n            if(actived) actived.classList.remove(\"active\")\n            if(cur) cur.classList.add(\"active\")\n            setActived(cur)\n        }\n    }\n    useEffect(() => {\n        const handleScroll = (e: Event) => {\n            updateHighlight()\n        }\n        updateHighlight()\n        window.addEventListener('scroll', handleScroll)\n        return () => window.removeEventListener('scroll', handleScroll)\n    })\n    return (\n        <div>\n            <header>\n            <nav>\n                <a href=\"#home\" className=\"navItem\">Logo</a>\n                <div className=\"navMenu\" ref={navRef}>\n                <a href=\"#home\" className=\"homeNavItem navItem\">Home</a>\n                <a href=\"#about\" className=\"aboutNavItem navItem\">About</a>\n                <a href=\"#services\" className=\"servicesNavItem navItem\">Services</a>\n                <a href=\"#downloads\" className=\"downloadsNavItem navItem\">Downloads</a>\n                <a href=\"#contact\" className=\"contactNavItem navItem\">Contact</a>\n                </div>\n            </nav>\n            </header>\n            <main ref={mainRef}>\n            <section className=\"home\" id=\"home\" ref={homeRef}>\n                <h1>\n                Home\n                </h1>\n            </section>\n            <section className=\"about\" id=\"about\" ref={aboutRef}>\n                <h1>\n                About\n                </h1>\n            </section>\n            <section className=\"services\" id=\"services\" ref={servicesRef}>\n                <h1>\n                Services\n                </h1>\n            </section>\n            <section className=\"downloads\" id=\"downloads\" ref={downloadsRef}>\n                <h1>\n                Downloads\n                </h1>\n            </section>\n            <section className=\"contact\" id=\"contact\" ref={contactRef}>\n                <h1>\n                Contact\n                </h1>\n            </section>\n            </main>\n        </div>\n    )\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {View} from './components/View'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <View/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}